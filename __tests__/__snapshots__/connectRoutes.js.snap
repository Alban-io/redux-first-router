exports[`enhancer -> _historyAttemptDispatchAction() dispatches action matching pathname when history location changes 1`] = `
Object {
  "meta": Object {
    "location": Object {
      "backNext": true,
      "current": Object {
        "pathname": "/second/foo",
        "payload": Object {
          "param": "foo",
        },
        "type": "SECOND",
      },
      "history": Object {
        "entries": Array [
          "/",
        ],
        "index": 0,
        "length": 1,
      },
      "load": undefined,
      "prev": Object {
        "pathname": "",
        "payload": Object {},
        "type": "",
      },
      "redirect": undefined,
    },
  },
  "payload": Object {
    "param": "foo",
  },
  "type": "SECOND",
}
`;

exports[`enhancer dispatches location-aware action when store is first created so app is location aware on load 1`] = `
Object {
  "meta": Object {
    "location": Object {
      "backNext": undefined,
      "current": Object {
        "pathname": "/first",
        "payload": Object {},
        "type": "FIRST",
      },
      "history": Object {
        "entries": Array [
          "/first",
        ],
        "index": 0,
        "length": 1,
      },
      "load": true,
      "prev": Object {
        "pathname": "",
        "payload": Object {},
        "type": "",
      },
      "redirect": undefined,
    },
  },
  "payload": Object {},
  "type": "FIRST",
}
`;

exports[`enhancer listens to history changes and dispatches actions matching history's location.pathname 1`] = `
Object {
  "meta": Object {
    "location": Object {
      "backNext": true,
      "current": Object {
        "pathname": "/second/bar",
        "payload": Object {
          "param": "bar",
        },
        "type": "SECOND",
      },
      "history": Object {
        "entries": Array [
          "/first",
          "/second/bar",
        ],
        "index": 1,
        "length": 2,
      },
      "load": undefined,
      "prev": Object {
        "pathname": "/first",
        "payload": Object {},
        "type": "FIRST",
      },
      "redirect": undefined,
    },
  },
  "payload": Object {
    "param": "bar",
  },
  "type": "SECOND",
}
`;

exports[`middleware dispatches location-aware action, changes address bar + document.title 1`] = `
Object {
  "meta": Object {
    "location": Object {
      "backNext": undefined,
      "current": Object {
        "pathname": "/second/bar",
        "payload": Object {
          "param": "bar",
        },
        "type": "SECOND",
      },
      "history": Object {
        "entries": Array [
          "/",
          "/second/bar",
        ],
        "index": 1,
        "length": 2,
      },
      "load": undefined,
      "prev": Object {
        "pathname": "",
        "payload": Object {},
        "type": "",
      },
      "redirect": undefined,
    },
  },
  "payload": Object {
    "param": "bar",
  },
  "type": "SECOND",
}
`;

exports[`middleware dispatches location-aware action, changes address bar + document.title 2`] = `
Object {
  "location": Object {
    "backNext": undefined,
    "hasSSR": undefined,
    "history": Object {
      "entries": Array [
        "/",
        "/second/bar",
      ],
      "index": 1,
      "length": 2,
    },
    "load": undefined,
    "pathname": "/second/bar",
    "payload": Object {
      "param": "bar",
    },
    "prev": Object {
      "pathname": "",
      "payload": Object {},
      "type": "",
    },
    "redirect": undefined,
    "routesMap": Object {
      "FIRST": "/first",
      "SECOND": "/second/:param",
    },
    "type": "SECOND",
  },
  "title": "title: SECOND",
}
`;

exports[`middleware user dispatches NOT_FOUND and middleware adds missing info to action 1`] = `
Object {
  "meta": Object {
    "location": Object {
      "backNext": undefined,
      "current": Object {
        "pathname": "/",
        "payload": Object {},
        "type": "@@pure-redux-router/NOT_FOUND",
      },
      "history": Object {
        "entries": Array [
          "/",
        ],
        "index": 0,
        "length": 1,
      },
      "load": undefined,
      "prev": Object {
        "pathname": "",
        "payload": Object {},
        "type": "",
      },
      "redirect": undefined,
    },
  },
  "payload": Object {},
  "type": "@@pure-redux-router/NOT_FOUND",
}
`;
